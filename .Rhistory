cmat
points(cx, cy, col=c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
View(distTmp)
points(x, y, pch = 19, cex = 2, cols1[newClust])
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
View(newClust)
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd =2)
mdist(x, y, newCx, newCy)
View(distTmp2)
table(distTmp2)
apply(distTmp2,2,which.min)
View(newClust2)
points(cx, cy, pch = 19, cex = 2, col = cols1[newClust2])
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
points(x, y, pch = 19, cex = 2, cols1[newClust])
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
View(dataFrame)
points(x, y, col = kmObj$cluster, pch = 19, cex = 2)
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col=c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2 )
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2 )
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2 )
View(dataMatrix)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
View(mat)
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2[, 1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u * 2
a1 <- (svd1$u[,1] * svd1$d[1], %*% t(svd$v[,1]))
a1 <- (svd1$u[,1] * svd1$d[1] %*% t(svd$v[,1]))
a1 <- (svd1$u[,1] * svd1$d[1] %*% t(svd1$v[,1]))
a1 <- (svd1$u[,1] * svd1$d[1] %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$d
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
quit()
quit()
library(stats)
str(airquality)
getwd()
setwd("./..")
gedwd()
getwd
getwd()
list.files()
setwd("./GitHub/RepData_PeerAssessment1/")
getwd)
getwd()
list.files()
library(knitr)
library(dplyr)
library(ggplot2)
head(diamonds)
list.files()
d <- read.csv(file = "activity.zip")
d
head(d)
unzip("activity.zip")
list.files()
read.csv("activity.csv")
d <- read.csv("activity.csv")
str(d)
summary(d)
unique(d$steps)
length(unique(d$steps))
length(unique(d$date))
str(d)
library(lubridate)
d$interval <- ymd(d$interval)
d$interval <- ymd(as.character(d$interval))
d$date <- ymd(as.character(d$date))
str(d)
d <- read.csv("activity.csv")
list.files()
d <- read.csv("activity.csv")
d <- read.csv("activity.csv")
d$date <- ymd(d$date)
str(d)
d$interval <- as.factor(d$interval)
str(d)
length(unique(d$interval))
length((d$interval)
length(d$interval)
str(d$interval)
levels(d$interval)
levels(d$interval)[1:10]
d1 <- tapply(d$steps, d$date, mean(d$steps))
d1 <- tapply(d$steps, d$date, mean)
d1
table(d1)
View(d1)
d1 <- tapply(d$steps, !is.na(d$date), mean)
is.na(d$date)
!is.na(d$date)
summary(d$date)
length(d$date)
length(unique(d$date))
d1 <- tapply(d$steps, d$date, mean)
d.mean.steps.day <- (sum(d$steps))/(length(unique(d$date)))
d.mean.steps.day
d.mean.steps.day <- (sum(!is.na(d$steps)))/(length(unique(d$date)))
d.mean.steps.day
summary(d$steps)
d %>% select(steps) %>% arrange(steps, desc)
d %>% select(steps) %>% arrange(desc(steps))
d %>% select(steps) %>% arrange(desc(steps))[1:50]
steps.desc <- d %>% select(steps) %>% arrange(desc(steps))[1:50]
steps.desc <- d %>% select(steps) %>% arrange(desc(steps))
steps.desc[1:20]
steps.desc
class(steps.desc)
steps.desc[1:20,]
d.mean.steps.day <- (sum(!is.na(d$steps)))/(length(unique(d$date)))
d.mean.steps.day
d.sum.steps.day <- (sum(!is.na(d$steps)))
hist(d.sum.steps.day)
d.sum.steps.day
d.sum.steps.day <- tapply(d$steps, d$date, sum)
d.sum.steps.day
table(d.sum.steps.day)
d.test <- d %>% select(steps, date) %>%  group_by(date) %>% mutate(sum(steps))
d.test
dt <- d
dt
summary(dt)
d.test
d.test <- d %>% select(steps, date) %>% filter(!is.na()) %>%  group_by(date) %>% mutate(sum(steps))
d.test <- d %>% select(steps, date) %>% filter(!is.na(steps)) %>%  group_by(date) %>% mutate(sum(steps))
d.test
d.test <- d %>% select(steps, date) %>% filter(!is.na(steps)) %>%  group_by(date) %>% mutate(sum(steps)) %>% filter(unique(date))
d.steps.per.day <- aggregate(steps ~date, d, sum)
d.steps.per.day
d.steps.per.day <- d %>% aggregate(steps ~ date, sum)
hist(d.steps.per.day)
?hist
hist(d.steps.per.day ~ date)
hist(d.steps.per.day$steps
hist(d.steps.per.day$steps)
ggplot(d.steps.per.day, aes (x=steps))
geom_histogram()
g <- ggplot(d.steps.per.day, aes (x=steps))
g + geom_histogram()
g + geom_histogram(fill = "blue")
g + geom_histogram(fill = "ligthblue")
g + geom_histogram(binwitdth = 1000)
g + geom_histogram(binwidth = 1000)
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Counted times per Day", title = "Steps per day shown per histogramm")
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Counted times per Day", title = "Steps per day shown per histogramm")
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown per histogramm")
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown per histogramm")
d.steps.per.day <- aggregate(steps ~ date, d, mean)
d.mean.steps.per.day <- aggregate(steps ~ date, d, mean)
d.median.steps.per.day <- aggregate(steps ~ date, d, median)
d.mean.steps.day
d.steps.per.day <- aggregate(steps ~date, d, sum)
d.steps.per.day
d.mean.steps.per.day <- aggregate(steps ~ date, d, mean)
d.mean.steps.day
boxplot(d.mean.steps.day)
boxplot(d.steps.per.daysteps.day)
boxplot(d.steps.per.days)
d.steps.per.day
boxplot(d.steps.per.day)
boxplot(d.steps.per.day$steps)
mean.steps <- mean(d.steps.per.day)
mean.steps <- mean(!is.na(d.steps.per.day))
mean.steps <- mean(!is.na(d.steps.per.day))
median.steps <- median(!is.na(d.steps.per.day))
mean.steps
median.steps
mean.steps <- mean(!is.na(d$steps))
mean.steps
mean.steps <- mean(!is.na(d.steps.per.day$steps))
median.steps <- median(!is.na(d.steps.per.day$steps))
mean.steps
mean(d.steps.per.day)
mean(d.steps.per.day$steps)
median.steps <- median(d.steps.per.day$steps)
median.steps
d$interval
d.mean.steps.per.day <- aggregate(steps ~date, d, mean)
d.mean.steps.day
10766.19/61
intervall_steps <- aggregate(d, by = list(interval), FUN = mean, na.rm=TRUE)
intervall_steps <- aggregate(d, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
intervall.steps
d.intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
str(d.intervall.steps)
d.intervall.steps <- names(c("interval", "mean"))
str(d.intervall.steps)
d.intervall.steps
d.intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
colnames(d.intervall.steps) <- c("interval", "mean")
d.intervall.steps
head(d.intervall.steps)
str(d.intervall.steps)
colnames(d.intervall.steps) <- c("interval", "mean.steps")
g + geom_smooth()
g + geom_smooth(y = mean.steps)
g + geom_line()
g <- ggplot(d.intervall.steps, aes(x = interval, y = mean.steps))
g + geom_line()
g + geom_line()
d.intervall.steps$interval
d.intervall.steps$interval <- as.integer(levels(d.intervall.steps$interval))[d.intervall.steps]
d.intervall.steps$interval <- as.integer(d.intervall.steps$interval)
str(d.intervall.steps)
d.intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
colnames(d.intervall.steps) <- c("interval", "mean.steps")
levels(d.intervall.steps$interval)
d.intervall.steps$interval <- as.integer(levels(d.intervall.steps$interval))
str(d.intervall.steps)
d.intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
colnames(d.intervall.steps) <- c("interval", "mean.steps")
d.intervall.steps$interval <- as.integer(levels(d.intervall.steps$interval)[d.intervall.steps$interval])
d.intervall.steps <- aggregate(d$steps, by = list(interval = d$interval), FUN = mean, na.rm=TRUE)
colnames(d.intervall.steps) <- c("interval", "mean.steps")
d.intervall.steps$interval <- as.integer(levels(d.intervall.steps$interval)[d.intervall.steps$interval])
g <- ggplot(d.intervall.steps, aes(x = interval, y = mean.steps))
g + geom_line()
g + geom_line() + labs(x = "Intervals (example: 1000 = 10am)", y = "Mean counted steps", title = "Average daily steps shown in time series")
d.max.intervall <- max(d.intervall.steps$mean.steps)
d.max.intervall <- max(d.intervall.steps$mean.steps)
d.max.intervall
d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval[1,1])
d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval[1])
d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval, mean.steps)
d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval, mean.steps) [1]
d.max.intervall[1,1) <- d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval, mean.steps)
d.max.intervall[1,1] <- d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval, mean.steps)
d.max.intervall <- d.intervall.steps %>% select(interval, mean.steps) %>% arrange(desc(mean.steps)) %>%  select(interval, mean.steps)
d.max.intervall[1,1]
g <- ggplot(d.intervall.steps, aes(x = interval, y = mean.steps))
g + geom_line() + labs(x = "Intervals (example: 1000 = 10am)", y = "Mean counted steps", title = "Average daily steps shown in time series")
summary(d)
length(is.na(d$steps))
is.na(d$steps)
length(d$steps)
table(is.na(d$steps))
table(is.na(d$steps))[,2]
table(is.na(d$steps))[2]
percentage.of.missing.values <- (table(is.na(d$steps))[2] / length(d$steps)) * 100
percentage.of.missing.values
str(d.intervall.steps)
str(d)
nrow(d)
ncol(d)
d.imputed <- d
for (i in 1:nrow(data_imputed)) {
if (is.na(d.imputed$steps[i])) {
d.intervall.value <- d.imputed$interval[i]
d.steps.value <- d.intervall.steps[
d.intervall.steps$interval == d.intervall.value,]
d.imputed$steps[i] <- d.steps.value$steps
}
}
for (i in 1:nrow(d.imputed)) {
if (is.na(d.imputed$steps[i])) {
d.intervall.value <- d.imputed$interval[i]
d.steps.value <- d.intervall.steps[
d.intervall.steps$interval == d.intervall.value,]
d.imputed$steps[i] <- d.steps.value$steps
}
}
is.na(d)
is.na(d, value=TRUE)
is.na(d)
na<- is.na(d$steps)
na
head(na)
d$steps[na]
d$steps
d$steps[1:20]
str(d)
library(knitr)
library(dplyr)
library(ggplot2)
library(lubridate)
opts_chunk$set(echo = TRUE, results = 'hold')
unzip("activity.zip")
d <- read.csv("activity.csv")
d[5,]
d.intervall.steps[5,]
d.intervall.steps[20,]
class(d.intervall.steps[20,])
class(d.intervall.steps[d.intervall.steps$interval == 20,])
d.intervall.steps[d.intervall.steps$interval == 20,]
d.intervall.steps
61*288
d.imputed <- d
d.imputed
for (i in 1:nrow(d.imputed)) {
if (is.na(d.imputed$steps[i])) {
d.intervall.value <- d.imputed$interval[i]
d.steps.value <- d.intervall.steps[
d.intervall.steps$interval == d.intervall.value,]
d.imputed$steps[i] <- d.steps.value$steps
}
}
d.intervall.value <- d.imputed$interval[5]
d.intervall.value
d.steps.value <- d.intervall.steps[
d.intervall.steps$interval == d.intervall.value,]
d.steps.value
d.imputed$steps[5] <- d.steps.value$steps
d.steps.value$steps
for (i in 1:nrow(d.imputed)) {
if (is.na(d.imputed$steps[i])) {
d.intervall.value <- d.imputed$interval[i]
d.steps.value <- d.intervall.steps[
d.intervall.steps$interval == d.intervall.value,]
d.imputed$steps[i] <- d.steps.value$mean.steps
}
}
d.imputed
d.no.na <- d.imputed
d.no.na[1:50]
d.no.na[1:50,]
str(d.imputed)
str(d)
d.cleaned <- d.imputed
rm(d.no.na)
d.clean <- d.imputed
d.clean.steps.per.day <- aggregate(steps ~date, d.clean, sum)
d.clean.steps.per.day <- aggregate(steps ~date, d.clean, sum)
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
clean.mean.steps <- mean(d.clean.steps.per.day$steps)
clean.median.steps <- median(d.clean.steps.per.day$steps)
clean.mean.steps
clean.median.steps
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
g <- ggplot(d.steps.per.day, aes (x=steps))
g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
g <- ggplot(d.intervall.steps, aes(x = interval, y = mean.steps))
p1 <- g + geom_line() + labs(x = "Intervals (example: 1000 = 10am)", y = "Mean counted steps", title = "Average daily steps shown in time series")
multiplot(p1, p2, cols=2)
?multiplot
library(ggplot2)
?multiplot()
source("multiplot function.R")
multiplot(p1, p2, cols=2)
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm")
multiplot(p1, p2, cols=2)
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
g <- ggplot(d.steps.per.day, aes (x=steps))
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm")
multiplot(p1, p2, cols=2)
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after replacing NA values")
g <- ggplot(d.steps.per.day, aes (x=steps))
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm")
multiplot(p1, p2, cols=2)
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after repl. NA values") + scale_y_continuous(limits = c(0, 15))
g <- ggplot(d.steps.per.day, aes (x=steps))
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm") + scale_y_continuous(limits = c(0, 15))
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after repl. NA values") + coord_fixed()
g <- ggplot(d.steps.per.day, aes (x=steps))
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm") + coord_fixed()
multiplot(p1, p2, cols=2)
g <- ggplot(d.clean.steps.per.day, aes (x=steps))
p2 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm after repl. NA values") + expand_limits(y = c(0,15))
g <- ggplot(d.steps.per.day, aes (x=steps))
p1 <- g + geom_histogram(binwidth = 1000) + labs(x = "Steps per day", y = "Total counted times", title = "Steps per day shown with histogramm") + expand_limits(y = c(0,15))
multiplot(p1, p2, cols=2)
str(d.imputed)
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type[d.imputed$day.type  %in% c('Saturday','Sunday') ] <- "weekend"
d.imputed$day.type[d.imputed$day.type != "weekend"] <- "weekday"
d.imputed
str(d.imputed)
str(d.imputed$day.type)
summary(d.imputed$day.type)
d.imputed$day.type <- as.factor(d.imputed$day.type)
summary(d.imputed$day.type)
summary(d.imputed$day.type)
str(d.imputed$day.type)
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type[d.imputed$day.type  %in% c('Saturday','Sunday') ] <- "weekend"
d.imputed$day.type[d.imputed$day.type != "weekend"] <- "weekday"
d.imputed$day.type <- factor(d.imputed$day.type)
str(d.imputed)
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type
d.imputed$day.type[d.imputed$day.type  %in% c('Saturday','Sunday') ] <- "weekend"
?as.factor
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type[d.imputed$day.type  %in% c('Saturday','Sunday') ] <- "weekend"
d.imputed$day.type[d.imputed$day.type != "weekend"] <- "weekday"
d.imputed$day.type <- as.factor(d.imputed$day.type, labels = c("weekday", "weekend"))
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type[d.imputed$day.type  %in% c('Saturday','Sunday') ] <- "weekend"
d.imputed$day.type[d.imputed$day.type != "weekend"] <- "weekday"
d.imputed$day.type[1:100,]
d.imputed$day.type[1:100]
d.imputed$day.type[1:300]
tail(d.imputed)
unique(d.imputed$day.type)
d.imputed['day.type'] <- weekdays(d.imputed$date)
d.imputed$day.type[d.imputed$day.type  %in% c('Samstag','Sonntag') ] <- "weekend"
d.imputed$day.type[d.imputed$day.type != "weekend"] <- "weekday"
unique(d.imputed$day.type)
d.imputed$day.type <- as.factor(d.imputed$day.type)
d.imputed$day.type
d.imputed$day.type <- as.factor(d.imputed$day.type)
str(d.imputed)
d.clean['day.type'] <- weekdays(d.clean$date)
d.clean$day.type[d.clean$day.type  %in% c('Samstag','Sonntag') ] <- "weekend"
d.clean$day.type[d.clean$day.type != "weekend"] <- "weekday"
d.clean$day.type <- as.factor(d.clean$day.type)
d.clean.steps.by.intervall <- aggregate(steps ~ interval + day.type, d.clean, mean)
d.clean.steps.by.intervall
str(d.clean.steps.by.intervall)
d.clean.steps.by.intervall <- aggregate(steps ~ interval + day.type, d.clean, mean)
str(d.clean.steps.by.intervall)
g <- ggplot(d.clean.steps.by.intervall, aes (x=steps))
g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday vs. weekend")
g <- ggplot(d.clean.steps.by.intervall, aes (x=steps, y=steps))
g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday vs. weekend")
g <- ggplot(d.clean.steps.by.intervall, aes (x=interval, y=steps))
g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday vs. weekend")
d.clean.steps.by.intervall.weekdays <- d.clean.steps.by.intervall %>% filter(day.type == "weekday")
head(d.clean.steps.by.intervall.weekdays)
unique(d.clean.steps.by.intervall.weekdays)
unique(d.clean.steps.by.intervall.weekdays$day.type)
d.clean.steps.by.intervall.weekend <- d.clean.steps.by.intervall %>% filter(day.type == "weekend")
g <- ggplot(d.clean.steps.by.intervall.weekdays, aes (x=interval, y=steps))
p3 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
g <- ggplot(d.clean.steps.by.intervall.weekend, aes (x=interval, y=steps))
p4 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekend")
multiplot(p3, p4, cols=2)
d.clean.steps.by.intervall <- aggregate(steps ~ interval + day.type, d.clean, mean)
d.clean.steps.by.intervall.weekdays <- d.clean.steps.by.intervall %>% filter(day.type == "weekday")
d.clean.steps.by.intervall.weekend <- d.clean.steps.by.intervall %>% filter(day.type == "weekend")
View(d.clean.steps.by.intervall.weekend)
View(d.clean.steps.by.intervall.weekdays)
g <- ggplot(d.clean.steps.by.intervall.weekdays, aes (x=interval, y=steps))
p3 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
p3 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
with(d.clean.steps.by.intervall.weekdays, plot(interval, steps))
with(d.clean.steps.by.intervall.weekend, plot(interval, steps))
g <- ggplot(d.clean.steps.by.intervall.weekdays, aes (x = interval, y = steps))
p3 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
p3
g <- ggplot(d.clean.steps.by.intervall.weekdays, aes(x = interval, y = steps, group = 1))
p3 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekday")
g <- ggplot(d.clean.steps.by.intervall.weekend, aes(x=interval, y=steps, group = 1))
p4 <- g + geom_line() + labs(x = "Steps per day", y = "Total counted times", title = "Steps weekend")
multiplot(p3, p4, cols=2)
multiplot(p3, p4, cols=2)
g <- ggplot(d.clean.steps.by.intervall.weekdays, aes(x = interval, y = steps, group = 1))
p3 <- g + geom_line() + labs(x = "Interval (ex. 1000 = 10 am", y = "Steps", title = "Steps weekday") + scale_x_discrete(breaks = c(500, 1000, 1500, 2000), labels = c("500", "1000", "1500", "2000"))
g <- ggplot(d.clean.steps.by.intervall.weekend, aes(x=interval, y=steps, group = 1))
p4 <- g + geom_line() + labs(x = "Interval (ex. 1000 = 10 am", y = "Steps", title = "Steps weekend") + scale_x_discrete(breaks = c(500, 1000, 1500, 2000), labels = c("500", "1000", "1500", "2000"))
multiplot(p3, p4, cols=2)
multiplot(p3, p4, cols=2)
multiplot(p3, p4, cols=1, row=2)
multiplot(p3, p4, row=2)
multiplot(p3, p4, layout = (2,1))
multiplot(p3, p4, layout = c(2,1))
multiplot(p3, p4, layout = 1)
multiplot(p3, p4, layout = 2)
multiplot(p3, p4, layout = matrix(nrow = 2, ncol = 1))
multiplot(p3, p4, layout = matrix(x = 2, nrow = 2, ncol = 1))
multiplot(p3, p4, nrow = 2)
multiplot(p3, p4, nrow = 1)
multiplot(p3, p4, nrow = 3)
m <- matrix(data = 1:2, nrow = 2, ncol = 1)
m
multiplot(p3, p4, layout = m)
multiplot(p3, p4, layout = matrix(data = 1:2, nrow = 2, ncol = 1))
d <- read.csv("activity.csv")
getwd()
list.files()
quit()
